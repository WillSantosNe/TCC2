"""Adiciona data_modificacao a tabela Anotacao

Revision ID: 79187cbe9d9f
Revises: 
Create Date: 2025-08-28 21:04:03.994752

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '79187cbe9d9f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Passo 1: Adicionar a coluna permitindo que ela seja nula temporariamente
    with op.batch_alter_table('anotacao', schema=None) as batch_op:
        batch_op.add_column(sa.Column('data_modificacao', sa.DateTime(), nullable=True))

    # Passo 2: Atualizar os dados existentes. 
    # Para as anotações antigas, a data de modificação será igual à de criação.
    op.execute('UPDATE anotacao SET data_modificacao = data_criacao WHERE data_modificacao IS NULL')

    # Passo 3: Agora que não há mais nulos, alterar a coluna para NOT NULL.
    with op.batch_alter_table('anotacao', schema=None) as batch_op:
        batch_op.alter_column('data_modificacao', existing_type=sa.DateTime(), nullable=False)


# DENTRO DO ARQUIVO 79187cbe9d9f_... .py

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('anotacao', schema=None) as batch_op:
        batch_op.drop_column('data_modificacao')

    # ### end Alembic commands ###
